#!/bin/bash

echo "=============================================================="
echo " INTERACTIVE SCRIPT FOR SOMATIC VARIANT FILTERING"
echo " STEP: FilterMutectCalls (GATK)"
echo "=============================================================="
echo ""
echo "This step applies statistical and heuristic filters to somatic variants"
echo "detected by Mutect2. The goal is to eliminate false positives and produce"
echo "a reliable set of variants for downstream analysis (e.g., annotation, validation, etc)."
echo ""
echo "TOOL USED:"
echo "- GATK FilterMutectCalls (via Docker: broadinstitute/gatk)"
echo ""
echo "REQUIRED INPUTS:"
echo "- The .vcf.gz file generated by Mutect2"
echo "- Reference genome (.fa) with corresponding .fai and .dict in the same folder"
echo ""
echo "OUTPUT:"
echo "- Filtered VCF (.vcf.gz)"
echo "- Index (.vcf.gz.tbi)"
echo "- Statistics/log file"
echo ""

echo "Can we proceed? (yes/no)"
read START_CONFIRM
[[ "$START_CONFIRM" != "yes" ]] && echo "Execution canceled." && exit 0

# === Reference Genome ===
echo ""
echo "Enter the FULL path to the folder containing the reference .fa file:"
read GENOME_DIR
[[ ! -d "$GENOME_DIR" ]] && echo "Error: folder not found." && exit 1
echo "Files found:"
ls "$GENOME_DIR"
echo "Enter the EXACT NAME of the .fa reference file (e.g., hg38.fa):"
read GENOME_FA
GENOME="$GENOME_DIR/$GENOME_FA"

if [[ ! -f "$GENOME" || ! -f "$GENOME_DIR/${GENOME_FA}.fai" || ! -f "$GENOME_DIR/${GENOME_FA%.fa}.dict" ]]; then
  echo "Error: .fa, .fai, and .dict must all be present in the same folder with consistent naming."
  exit 1
fi

# === Mutect2 VCF ===
echo ""
echo "Enter the FULL path to the folder containing the Mutect2 output VCF:"
read VCF_DIR
[[ ! -d "$VCF_DIR" ]] && echo "Error: folder not found." && exit 1
echo "Files found:"
ls "$VCF_DIR"
echo "Enter the EXACT NAME of the Mutect2 .vcf.gz file:"
read VCF_MUTECT
[[ ! -f "$VCF_DIR/$VCF_MUTECT" ]] && echo "Error: VCF file not found." && exit 1
[[ ! -f "$VCF_DIR/${VCF_MUTECT}.tbi" ]] && echo "Error: corresponding .tbi index file not found." && exit 1

# === Docker UID ===
echo ""
echo "Enter the UID to run Docker (e.g., 1006), or 'no' to run as root:"
read UID_INPUT
USE_USER=""
[[ "$UID_INPUT" =~ ^[0-9]+$ ]] && USE_USER="--user $UID_INPUT"

# === Threads and RAM ===
TOTAL_THREADS=$(nproc)
echo "Your system has $TOTAL_THREADS threads. How many do you want to use?"
read THREADS
TOTAL_RAM=$(free -g | awk '/Mem:/ {print $2}')
echo "Total RAM: ${TOTAL_RAM} GB. How much would you like to allocate?"
read RAM

# === Output folder ===
TS=$(date +"%d-%m-%Y_%Hh%Mm")
OUTPUT_DIR="$VCF_DIR/9-FilterMutectCalls_output_$TS"
mkdir -p "$OUTPUT_DIR"

# === Summary ===
echo ""
echo "================ SUMMARY ================"
echo "Reference genome: $GENOME"
echo "Mutect2 VCF: $VCF_MUTECT"
echo "Output folder: $OUTPUT_DIR"
echo "Docker user: ${UID_INPUT:-root}"
echo "Threads: $THREADS | RAM: ${RAM}GB"
echo "========================================="
echo "Confirm execution? (yes/no)"
read CONFIRM
[[ "$CONFIRM" != "yes" ]] && echo "Execution canceled." && exit 0

# === Execution ===
VCF_BASENAME=$(basename "$VCF_MUTECT" .vcf.gz)
VCF_IN="/vcf/$VCF_MUTECT"
VCF_OUT="${VCF_BASENAME}_filtered.vcf.gz"
LOG_OUT="${VCF_BASENAME}_filtermutectcalls.log"

SCRIPT_START=$(date +%s)

docker run --rm $USE_USER \
  -v "$GENOME_DIR":/genome \
  -v "$VCF_DIR":/vcf \
  -v "$OUTPUT_DIR":/output \
  broadinstitute/gatk \
  bash -c "gatk FilterMutectCalls \
    -R /genome/$GENOME_FA \
    -V $VCF_IN \
    -O /output/$VCF_OUT \
    --verbosity INFO" \
  &> "$OUTPUT_DIR/$LOG_OUT"

SCRIPT_END=$(date +%s)
DURATION=$((SCRIPT_END - SCRIPT_START))

echo ""
echo "=============================================================="
echo "FilterMutectCalls completed successfully!"
echo "Output is available at: $OUTPUT_DIR"
echo "Total runtime: $((DURATION / 3600))h $((DURATION % 3600 / 60))m $((DURATION % 60))s"
echo "=============================================================="
